@model IEnumerable<MainDMMM.Models.Entities.Post>
@using System.Text.RegularExpressions;
@helper Truncate(string input, int lenght)
{
    if (input.Length <= lenght)
    {
        @Html.Raw(input)
    }
    else
    {
        @Html.Raw(input.Substring(0, input.IndexOf(" ", lenght)).ToString())
    }
}

<div class="container">
    <div class="row">

        @foreach (var items in Model)
        {
        <div class="col-md-3">

            <div class="card">

                @if (items.ImageModels.FirstOrDefault().ImageContent != null)
                {
                    <img class="card-img-top" src="data:image/jpg;base64,@(Convert.ToBase64String(items.ImageModels.FirstOrDefault().ImageContent))" style="max-height:300px;" alt="Card image cap">

                }
                <div class="card-body">
                    <h5 class="card-title">
                        <a href="@Url.Action("Preview", new { id = items.Id })">
                            @items.Title
                        </a>
                    </h5>
                    <p class="card-text text-justify">
                        @{

                            var noHtml = Regex.Replace(items.Content, @"<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;", string.Empty).Trim();
                            items.Content = noHtml;
                        }

                        @Html.Raw(Truncate(noHtml, 210))... <a href="@Url.Action("Preview", new { id = items.Id })">Read More</a>
                    </p>
                    <p class="card-text"><small class="text-muted">@items.DatePosted.ToString("ddd dd MM, yyyy")</small></p>
                </div>
            </div>
        </div>


        }
    </div>
</div>